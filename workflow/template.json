{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine. This value is used to derive the names of the NIC, NSG, public IP, and computer name."
      }
    },
    "virtualNetworkId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the existing virtual network (for example: /subscriptions/<subId>/resourceGroups/<rgName>/providers/Microsoft.Network/virtualNetworks/<vnetName>)."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet in the virtual network to which the NIC will be attached."
      }
    },
    "sshKeyName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing SSH public key resource (of type Microsoft.Compute/sshPublicKeys) stored in the same resource group."
      }
    },
    "customData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Cloud-init file content for the VM (for example, a cloud-init configuration file). This value will be base64 encoded by the template."
      }
    },
    "userData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "YAML file content for the VM userData. This value will be base64 encoded by the template."
      }
    }
  },
  "variables": {
    "location": "germanywestcentral",
    "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic')]",
    "networkSecurityGroupName": "[concat(parameters('virtualMachineName'), '-nsg')]",
    "publicIpAddressName": "[concat(parameters('virtualMachineName'), '-ip')]",
    "virtualMachineComputerName": "[parameters('virtualMachineName')]",
    "networkSecurityGroupRules": [
      {
        "name": "HTTP",
        "properties": {
          "priority": 300,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "80"
        }
      },
      {
        "name": "HTTPS",
        "properties": {
          "priority": 320,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "443"
        }
      },
      {
        "name": "Custom",
        "properties": {
          "priority": 340,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "12345"
        }
      }
    ],
    "subnetRef": "[concat(parameters('virtualNetworkId'), '/subnets/', parameters('subnetName'))]",
    "publicIpAddressType": "Static",
    "publicIpAddressSku": "Standard",
    "pipDeleteOption": "Detach",
    "virtualMachineRG": "[resourceGroup().name]",
    "osDiskType": "Premium_LRS",
    "osDiskDeleteOption": "Delete",
    "virtualMachineSize": "Standard_DC2as_v5",
    "nicDeleteOption": "Detach",
    "hibernationEnabled": false,
    "adminUsername": "azureuser",
    "enablePeriodicAssessment": "ImageDefault",
    "securityType": "ConfidentialVM",
    "secureBoot": true,
    "vTPM": true
  },
  "resources": [
    {
      "name": "[variables('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-11-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]",
                "properties": {
                  "deleteOption": "[variables('pipDeleteOption')]"
                }
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": "[variables('networkSecurityGroupRules')]"
      }
    },
    {
      "name": "[variables('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-08-01",
      "location": "[variables('location')]",
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
      },
      "sku": {
        "name": "[variables('publicIpAddressSku')]"
      }
    },
    {
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]",
              "securityProfile": {
                "securityEncryptionType": "DiskWithVMGuestState"
              }
            },
            "deleteOption": "[variables('osDiskDeleteOption')]"
          },
          "imageReference": {
            "publisher": "canonical",
            "offer": "ubuntu-24_04-lts",
            "sku": "cvm",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]",
              "properties": {
                "deleteOption": "[variables('nicDeleteOption')]"
              }
            }
          ]
        },
        "securityProfile": {
          "securityType": "[variables('securityType')]",
          "uefiSettings": {
            "secureBootEnabled": "[variables('secureBoot')]",
            "vTpmEnabled": "[variables('vTPM')]"
          }
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "osProfile": {
          "computerName": "[variables('virtualMachineComputerName')]",
          "adminUsername": "[variables('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[reference(resourceId(resourceGroup().name, 'Microsoft.Compute/sshPublicKeys', parameters('sshKeyName')), '2020-12-01').publicKey]"
                }
              ]
            }
          },
          "customData": "[base64(parameters('customData'))]"
        },
        "userData": "[base64(parameters('userData'))]"
      }
    }
  ],
  "outputs": {
    "publicIpAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName')), '2020-08-01').ipAddress]"
    },
    "virtualMachineId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName')), '2024-03-01').vmId]"
    }
  }
}
